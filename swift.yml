---
 - name: "Install and Configure OpenStack Object storage"   
   hosts: openstack
   remote_user: root
   gather_facts: yes
   
   tasks: 
     - name: "add swift user (set in service project)"
       shell: source ~/keystonerc && openstack user create --domain default --project service --password servicepassword swift 
       args:
         executable: /bin/bash
       register: swift_user
     - debug: var=swift_user.stdout_lines

     - name: "add swift user in admin role"
       shell: source ~/keystonerc && openstack role add --project service --user swift admin
       args:
         executable: /bin/bash


     - name: "add service entry for swift"
       shell: source ~/keystonerc && ""openstack service create --name swift --description "OpenStack Object Storage" object-storage"" 
       args:
         executable: /bin/bash
       register: object_service
     - debug: var=object_service.stdout_lines




     - name: "add endpoint for swift (public,internal)"
       shell: source ~/keystonerc && ""openstack endpoint create --region RegionOne swift {{ item }} http://{{ ansible_host }}:8080/v1/AUTH_%\(tenant_id\)s""
       args: 
         executable: /bin/bash
       register: end_swift
       with_items: 
         - public
         - internal
     - debug: var=end_swift


     - name: "add endpoint for swift (admin)"
       shell: source ~/keystonerc && ""openstack endpoint create --region RegionOne swift admin http://{{ ansible_host }}:8080/v1""
       args:
         executable: /bin/bash
       register: proxy_swift
     - debug: var=proxy_swift






#     - name: "create cinder database"
#       mysql_db: name=cinder state=present
#
#     - name: "create cinder user"
#       mysql_user: name=cinder password=cinder123 priv='cinder.*:ALL,GRANT' host={{ item }}
#       with_items:
#          - localhost
#          - '%'
#          - xopenstack

     - name: "Install swift"
       yum: name={{ item }} enablerepo=centos-openstack-ocata,epel state=present
       with_items: 
         - openstack-swift-proxy
         - python-memcached
         - openssh-clients


     - name: "Backup Original cinder configuation"
       copy: remote_src=True src=/etc/swift/proxy-server.conf dest=/etc/swift/proxy-server.conf.org

#     - name: "copy cinder configuation"
#       copy: src=cinder.conf dest=/etc/cinder/cinder.conf mode=640 owner=root group=cinder
#
#     - name: "replace ansible_host in cinder conf"
#       replace: dest=/etc/cinder/cinder.conf regexp='10.0.0.30' replace={{ ansible_host }} backup=yes
#       
#
##     - name: "Cinder DB-Sync"
##       shell: cinder-manage db sync
##       become: true
##       become_method: su
##       become_user: cinder
##       become_flags: '-s /bin/bash'
##       ignore_errors: true
#
#     - name: "cinder db sync"
#       raw: su -s /bin/bash cinder -c "cinder-manage db sync"
#  
#     - name: "start and enable cinder services"
#       service: name={{ item }} state=started enabled=yes
#       with_items: 
#         - openstack-cinder-api
#         - openstack-cinder-scheduler
#       tags: cinder_service
#     
#     - name: "openstack cinder service"
#       shell: source ~/keystonerc && openstack volume service list
#       register: status
#     - debug: var=status.stdout_lines
#  
#    
#     - name: "Install openstack-cinder packages"
#       yum: name={{ item }} enablerepo=centos-openstack-ocata,epel state=present
#       with_items:
#         - openstack-cinder
#         - python2-crypto 
#         - targetcli
#
#
#     - name: "Add Glance-api server into cinder conf "
#       lineinfile: dest=/etc/cinder/cinder.conf
#                   line={{ item.line }}
#                   insertafter={{ item.insertafter }}
#       with_items:
#         - { line: "glance_api_servers = http://{{ ansible_host }}:9292", insertafter: "transport_url= " }
#         - { line: "# Glance connection info", insertafter: "transport_url= " }
#       tags: cinder 
#
#     - name: "start and enable cinder-volume"
#       yum: name=openstack-cinder-volume state=started enabled=yes
#  
