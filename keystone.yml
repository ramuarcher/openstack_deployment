---
 - hosts: openstack
   remote_user: root
   gather_facts: True
   become: yes
  
   tasks: 
     - name: create database
       mysql_db: name=keystone state=present
     - name: create user
       mysql_user: name=keystone password=keystone123 priv='keystone.*:ALL,GRANT' host={{ item }}
       with_items: 
         - localhost
         - '%' 
     
     - name: "Install Keystone"
       yum: name={{ item }} enablerepo=centos-openstack-ocata,epel state=present
       with_items: 
         - openstack-keystone
         - openstack-utils
         - python-openstackclient
         - httpd
         - mod_wsgi     
     - name: "Keystone configuration"
       lineinfile: dest=/etc/keystone/keystone.conf
                   line={{ item.line }}
                   insertafter={{ item.insertafter }}
       with_items:
         - { line: "connection = mysql+pymysql://keystone:keystone123@192.168.122.238/keystone", insertafter: "^#?connection = <None>" }
         - { line: "servers = 192.168.122.238:11211", insertafter: '^\[memcache\]' }
         - { line: "driver = memcache", insertafter: '^\[token\]' }
         - { line: "provider = fernet", insertafter: '^\[token\]' }

     - name: "Keystone DB Sync copy"
       copy: src=keystone-db-sync.sh dest=~/keystone-db-sync.sh mode=775 owner=root group=root
     - name: "Keystone DB Sync"
       shell: sh keystone-db-sync.sh
     - name: "Enableconfig for Keystone ans start Apache httpd"
       shell: ln -s /usr/share/keystone/wsgi-keystone.conf /etc/httpd/conf.d/
     - name: "start and enable apache"
       service: name=httpd state=started enabled=yes
     - name: "keystonerc"
       copy: src=keystonerc dest=~/keystonerc mode=700
     - name: "Create projectss"
       shell: . ~/keystonerc && ""openstack project create --domain default --description "Service Project" service""
       args:
         executable: /bin/bash
#       with_items: 
#         - openstack project create --domain default --description "Service Project" service
#         - openstack service list
       register: project
     - debug: var=project.stdout_lines   
